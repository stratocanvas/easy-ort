# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm test
        env:
          CI: true
          TEST_IMAGES: ${{ secrets.TEST_IMAGES }}
          DETECTION_MODEL_URL: ${{ vars.DETECTION_MODEL_URL }}
          CLASSIFICATION_MODEL_URL: ${{ vars.CLASSIFICATION_MODEL_URL }}
          EMBEDDING_MODEL_URL: ${{ vars.EMBEDDING_MODEL_URL }}

  version-check:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Check version change
        id: check
        run: |
          git checkout HEAD^1
          OLD_VERSION=$(node -p "require('./package.json').version")
          git checkout HEAD
          NEW_VERSION=$(node -p "require('./package.json').version")
          if [ "$OLD_VERSION" = "$NEW_VERSION" ]; then
            echo "No version change detected"
            exit 1
          fi
          
          # Check if tag exists for this version
          if git rev-parse "v$NEW_VERSION" >/dev/null 2>&1; then
            echo "Tag v$NEW_VERSION already exists"
            exit 1
          fi
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          NPM_VERSION=$(npm view . version 2>/dev/null || echo "0.0.0")
          if [ "$NEW_VERSION" = "$NPM_VERSION" ]; then
            echo "Version $NEW_VERSION already exists on npm"
            exit 1
          fi

  release:
    needs: version-check
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version-check.outputs.version }}
          release_name: Release v${{ needs.version-check.outputs.version }}
          draft: false
          prerelease: false
          body_path: CHANGELOG.md

  publish:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      
      - uses: actions/setup-node@v4
        with:
          registry-url: https://npm.pkg.github.com/
      - run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
